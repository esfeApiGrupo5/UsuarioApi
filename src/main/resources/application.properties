spring.application.name=usuario-microservice

# ? CONFIGURACIÓN HÍBRIDA: Funciona con Gateway Y acceso directo

# Puerto fijo para acceso directo (el gateway puede usar este puerto)
server.port=8080

#Spring cloud eureka - HABILITADO PERO CON CONFIGURACIÓN TOLERANTE A FALLOS
spring.cloud.config.enabled=false
spring.cloud.compatibility-verifier.enabled=false

# Eureka Configuration - CON TOLERANCIA A FALLOS
eureka.instance.instance-id=${spring.application.name}:${server.port}
eureka.instance.hostname=localhost
eureka.instance.prefer-ip-address=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.enabled=true
# ? CONFIGURACIONES PARA QUE NO FALLE SI NO HAY EUREKA
eureka.client.register-with-eureka=false
eureka.client.fetch-registry=false
eureka.client.registry-fetch-interval-seconds=30

# Si quieres habilitar Eureka cuando esté disponible, cambia estos a true:
# eureka.client.register-with-eureka=true
# eureka.client.fetch-registry=true

#Debug - REDUCIDO
logging.level.org.springframework.security=WARN
logging.level.org.esfe.UsuarioApi.seguridad=INFO
logging.level.com.netflix.eureka=ERROR
logging.level.com.netflix.discovery=ERROR

#ACCESO A LA BASE DE DATOS
spring.datasource.driver-class.name = com.mysql.cj.jdbc.Driver
spring.datasource.url = jdbc:mysql://avnadmin:AVNS_NwbYcoKzY7gA_KiQVaW@usuarioapi-1b744e33-usuarioapi-976b.i.aivencloud.com:14523/defaultdb?ssl-mode=REQUIRED
spring.datasource.username = avnadmin
spring.datasource.password = AVNS_NwbYcoKzY7gA_KiQVaW

#CONFIGURACION DE JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# Clave secreta para firmar el token
security.jwt.secret-key = Y/I5T3T1aSOP+BezsicbSiUtzIZWxdcOVnylSYlJl/H22uPQID8VGjfzc5U5cVhKA6qm17V2yMP/mlrlTIkb+g==

# ? CONFIGURACIONES PARA HEALTH CHECKS (importante para Gateway)
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always
management.health.eureka.enabled=false

# ? TOLERANCIA A FALLOS DE SPRING CLOUD
spring.cloud.discovery.enabled=true
spring.cloud.service-registry.auto-registration.enabled=false
resilience4j.circuitbreaker.enabled=false